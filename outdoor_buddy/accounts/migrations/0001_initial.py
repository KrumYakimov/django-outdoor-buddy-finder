# Generated by Django 5.1.3 on 2024-11-27 11:02

import django.core.validators
import django.db.models.deletion
import outdoor_buddy.accounts.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("events", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Application User",
                "verbose_name_plural": "Application Users",
                "ordering": ["email"],
            },
            managers=[
                ("objects", outdoor_buddy.accounts.managers.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(4)],
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(10),
                            django.core.validators.RegexValidator(
                                message="Phone number must start with 0 and contain exactly 10 to 15 digits.",
                                regex="^0\\d{9,14}$",
                            ),
                        ],
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "ordering": ["user__email"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.RegexValidator(
                                "^[A-Za-z]*$", "Only letters are allowed."
                            ),
                        ],
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        validators=[
                            django.core.validators.MinLengthValidator(2),
                            django.core.validators.RegexValidator(
                                "^[A-Za-z]*$", "Only letters are allowed."
                            ),
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Do not show", "Do not show"),
                        ],
                        default="Do not show",
                        max_length=11,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "nationality",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "picture_upload",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                (
                    "skill_level",
                    models.CharField(
                        choices=[
                            ("Beginner", "Beginner"),
                            ("Intermediate", "Intermediate"),
                            ("Advanced", "Advanced"),
                            ("Expert", "Expert"),
                        ],
                        default="Beginner",
                        max_length=12,
                    ),
                ),
                (
                    "fitness_level",
                    models.CharField(
                        choices=[
                            ("Low", "Low"),
                            ("Moderate", "Moderate"),
                            ("High", "High"),
                            ("Athlete", "Athlete"),
                        ],
                        default="Moderate",
                        max_length=8,
                    ),
                ),
                ("availability", models.TextField(blank=True, null=True)),
                (
                    "preferred_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("languages", models.CharField(blank=True, max_length=255, null=True)),
                ("outdoor_experience", models.TextField(blank=True, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "preferred_activities",
                    models.ManyToManyField(related_name="users", to="events.activity"),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "ordering": ["user__email"],
            },
        ),
    ]
